# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Note: This file is managed by Puppet
# 
# # See: https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html

# Core Properties #
<% scope.lookupvar('nifi::core_properties').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>

####################
# State Management #
####################
<% scope.lookupvar('nifi::state_management').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>

# H2 Settings
<% scope.lookupvar('nifi::h2_settings').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>

# FlowFile Repository
<% scope.lookupvar('nifi::flowfile_repo').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>

# Content Repository
<% scope.lookupvar('nifi::content_repo').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>

# Provenance Repository Properties
<% scope.lookupvar('nifi::provenance_repo').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>

# Component Status Repository
<% scope.lookupvar('nifi::components_repo').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>

# Site to Site properties
<% scope.lookupvar('nifi::site_to_site').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>

# web properties #
<% scope.lookupvar('nifi::web_properties').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>

# security properties #
<% scope.lookupvar('nifi::security_properties').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>


# cluster node properties (only configure for cluster nodes) #
<% scope.lookupvar('nifi::cluster_properties').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>

# zookeeper properties, used for cluster management #
<% scope.lookupvar('nifi::zookeeper').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>

# kerberos #
<% scope.lookupvar('nifi::kerberos').sort.map do |k,v| -%>
<% unless v.to_s.strip.empty? -%>
<%= k %>=<%= v.is_a?(Array) ? v.join(',') : v %>
<% end -%>
<% end -%>

